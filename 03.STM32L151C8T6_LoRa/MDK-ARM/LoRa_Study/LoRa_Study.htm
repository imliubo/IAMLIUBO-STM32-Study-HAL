<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [LoRa_Study\LoRa_Study.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image LoRa_Study\LoRa_Study.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Wed Oct 17 18:17:07 2018
<BR><P>
<H3>Maximum Stack Usage =        184 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SX1278_begin &rArr; SX1278_defaultConfig &rArr; SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[5b]">_Error_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5b]">_Error_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32l1xx_it.o(i.BusFault_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[20]">COMP_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[1f]">DAC_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32l1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[31]">EXTI15_10_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32l1xx_it.o(i.HardFault_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[29]">I2C1_ER_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[28]">I2C1_EV_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2b]">I2C2_ER_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2a]">I2C2_EV_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32l1xx_it.o(i.MemManage_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32l1xx_it.o(i.NMI_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32l1xx_it.o(i.PendSV_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[32]">RTC_Alarm_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2c]">SPI1_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2d]">SPI2_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32l1xx_it.o(i.SVC_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32l1xx_it.o(i.SysTick_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[37]">SystemInit</a> from system_stm32l1xx.o(i.SystemInit) referenced from startup_stm32l151xba.o(.text)
 <LI><a href="#[c]">TAMPER_STAMP_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[23]">TIM10_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[24]">TIM11_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[25]">TIM2_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[26]">TIM3_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[27]">TIM4_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[34]">TIM6_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[35]">TIM7_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[22]">TIM9_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2e]">USART1_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[2f]">USART2_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[30]">USART3_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[33]">USB_FS_WKUP_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[1d]">USB_HP_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[1e]">USB_LP_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32l1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32l151xba.o(.text) referenced from startup_stm32l151xba.o(RESET)
 <LI><a href="#[38]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32l151xba.o(.text)
 <LI><a href="#[3a]">_sputc</a> from printf6.o(i._sputc) referenced from printf6.o(i.__0sprintf$6)
 <LI><a href="#[39]">fputc</a> from usart.o(i.fputc) referenced from printf6.o(i.__0printf$6)
 <LI><a href="#[36]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[38]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(.text)
</UL>
<P><STRONG><a name="[80]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[3b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3d]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[81]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[82]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[83]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[84]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[85]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USB_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32l151xba.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[87]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>HAL_Delay</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32l1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_DelayMs
</UL>

<P><STRONG><a name="[4d]"></a>HAL_GPIO_Init</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[5f]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_GetDIO0
</UL>

<P><STRONG><a name="[59]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_hw_Reset
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[3f]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[72]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32l1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[40]"></a>HAL_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32l1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32l1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[43]"></a>HAL_MspInit</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, stm32l1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[45]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[41]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[47]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 450 bytes, Stack size 32 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[74]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[77]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[76]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[48]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[49]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1860 bytes, Stack size 40 bytes, stm32l1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[62]"></a>HAL_SPI_GetState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPIReadByte
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPICommand
</UL>

<P><STRONG><a name="[4b]"></a>HAL_SPI_Init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, stm32l1xx_hal_spi_ex.o(i.HAL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
</UL>

<P><STRONG><a name="[4c]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, spi.o(i.HAL_SPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[4e]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPICommand
</UL>

<P><STRONG><a name="[50]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 690 bytes, Stack size 32 bytes, stm32l1xx_hal_spi.o(i.HAL_SPI_TransmitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPIReadByte
</UL>

<P><STRONG><a name="[75]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[52]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32l1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[51]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32l1xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[53]"></a>HAL_UART_Init</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[54]"></a>HAL_UART_MspInit</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[56]"></a>HAL_UART_Transmit</STRONG> (Thumb, 204 bytes, Stack size 32 bytes, stm32l1xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>MX_GPIO_Init</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>MX_SPI2_Init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, spi.o(i.MX_SPI2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_SPI2_Init &rArr; HAL_SPI_Init &rArr; HAL_SPI_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SX1278_HW_DelayMs</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sx1278.o(i.SX1278_HW_DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SX1278_HW_DelayMs &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_hw_Reset
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
</UL>

<P><STRONG><a name="[5e]"></a>SX1278_HW_GetDIO0</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sx1278.o(i.SX1278_HW_GetDIO0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1278_HW_GetDIO0
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
</UL>

<P><STRONG><a name="[60]"></a>SX1278_HW_SPICommand</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, sx1278.o(i.SX1278_HW_SPICommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIRead
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIBurstWrite
</UL>

<P><STRONG><a name="[63]"></a>SX1278_HW_SPIReadByte</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, sx1278.o(i.SX1278_HW_SPIReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SX1278_HW_SPIReadByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIRead
</UL>

<P><STRONG><a name="[61]"></a>SX1278_HW_SetNSS</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sx1278.o(i.SX1278_HW_SetNSS))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_hw_Reset
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPIReadByte
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPICommand
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIRead
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIBurstWrite
</UL>

<P><STRONG><a name="[64]"></a>SX1278_HW_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sx1278.o(i.SX1278_HW_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SX1278_HW_init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_begin
</UL>

<P><STRONG><a name="[65]"></a>SX1278_LoRaEntryTx</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, sx1278.o(i.SX1278_LoRaEntryTx))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SX1278_LoRaEntryTx &rArr; SX1278_defaultConfig &rArr; SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_hw_Reset
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_defaultConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_clearLoRaIrq
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIRead
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>SX1278_LoRaTxPacket</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, sx1278.o(i.SX1278_LoRaTxPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SX1278_LoRaTxPacket &rArr; SX1278_defaultConfig &rArr; SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_hw_Reset
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_GetDIO0
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_DelayMs
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_standby
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_defaultConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_clearLoRaIrq
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIRead
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIBurstWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>SX1278_SPIBurstWrite</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sx1278.o(i.SX1278_SPIBurstWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SX1278_SPIBurstWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPICommand
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
</UL>

<P><STRONG><a name="[69]"></a>SX1278_SPIRead</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, sx1278.o(i.SX1278_SPIRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SX1278_SPIRead &rArr; SX1278_HW_SPIReadByte &rArr; HAL_SPI_TransmitReceive &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPIReadByte
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPICommand
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaEntryTx
</UL>

<P><STRONG><a name="[67]"></a>SX1278_SPIWrite</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sx1278.o(i.SX1278_SPIWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SPICommand
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_standby
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_sleep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_entryLoRa
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_clearLoRaIrq
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaEntryTx
</UL>

<P><STRONG><a name="[6e]"></a>SX1278_begin</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, sx1278.o(i.SX1278_begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = SX1278_begin &rArr; SX1278_defaultConfig &rArr; SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_defaultConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>SX1278_clearLoRaIrq</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sx1278.o(i.SX1278_clearLoRaIrq))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SX1278_clearLoRaIrq &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaEntryTx
</UL>

<P><STRONG><a name="[6f]"></a>SX1278_config</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, sx1278.o(i.SX1278_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_DelayMs
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_standby
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_sleep
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_entryLoRa
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIRead
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIBurstWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_defaultConfig
</UL>

<P><STRONG><a name="[66]"></a>SX1278_defaultConfig</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sx1278.o(i.SX1278_defaultConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SX1278_defaultConfig &rArr; SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_begin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaEntryTx
</UL>

<P><STRONG><a name="[71]"></a>SX1278_entryLoRa</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sx1278.o(i.SX1278_entryLoRa))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SX1278_entryLoRa &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
</UL>

<P><STRONG><a name="[6a]"></a>SX1278_hw_Reset</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sx1278.o(i.SX1278_hw_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SX1278_hw_Reset &rArr; SX1278_HW_DelayMs &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_SetNSS
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_HW_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaEntryTx
</UL>

<P><STRONG><a name="[70]"></a>SX1278_sleep</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sx1278.o(i.SX1278_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SX1278_sleep &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
</UL>

<P><STRONG><a name="[6d]"></a>SX1278_standby</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, sx1278.o(i.SX1278_standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_SPIWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32l1xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>SystemClock_Config</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_OscConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>SystemInit</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, system_stm32l1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32l1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32l151xba.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>_Error_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(i._Error_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Error_Handler
</UL>

<P><STRONG><a name="[78]"></a>__0printf$6</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[88]"></a>__1printf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6), UNUSED)

<P><STRONG><a name="[7e]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0printf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>__0sprintf$6</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[89]"></a>__1sprintf$6</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6), UNUSED)

<P><STRONG><a name="[7f]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf6.o(i.__0sprintf$6))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[39]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0printf$6)
</UL>
<P><STRONG><a name="[36]"></a>main</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = main &rArr; SX1278_begin &rArr; SX1278_defaultConfig &rArr; SX1278_config &rArr; SX1278_standby &rArr; SX1278_SPIWrite &rArr; SX1278_HW_SPICommand &rArr; HAL_SPI_Transmit &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_begin
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaTxPacket
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SX1278_LoRaEntryTx
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI2_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[55]"></a>UART_SetConfig</STRONG> (Thumb, 666 bytes, Stack size 24 bytes, stm32l1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[57]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, stm32l1xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[4f]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32l1xx_hal_spi.o(i.SPI_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
</UL>

<P><STRONG><a name="[4a]"></a>RCC_SetFlashLatencyFromMSIRange</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, stm32l1xx_hal_rcc.o(i.RCC_SetFlashLatencyFromMSIRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_SetFlashLatencyFromMSIRange
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[46]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32l1xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[79]"></a>_printf_core</STRONG> (Thumb, 748 bytes, Stack size 96 bytes, printf6.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$6
</UL>

<P><STRONG><a name="[7d]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf6.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[7b]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printf6.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3a]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf6.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$6
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf6.o(i.__0sprintf$6)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
